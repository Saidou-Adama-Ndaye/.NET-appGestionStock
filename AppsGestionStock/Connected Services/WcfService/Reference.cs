//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AppsGestionStock.WcfService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompositeType", Namespace="http://schemas.datacontract.org/2004/07/WcfGestionStock")]
    [System.SerializableAttribute()]
    public partial class CompositeType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BoolValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StringValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BoolValue {
            get {
                return this.BoolValueField;
            }
            set {
                if ((this.BoolValueField.Equals(value) != true)) {
                    this.BoolValueField = value;
                    this.RaisePropertyChanged("BoolValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringValue {
            get {
                return this.StringValueField;
            }
            set {
                if ((object.ReferenceEquals(this.StringValueField, value) != true)) {
                    this.StringValueField = value;
                    this.RaisePropertyChanged("StringValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Produit", Namespace="http://schemas.datacontract.org/2004/07/WcfGestionStock.Model")]
    [System.SerializableAttribute()]
    public partial class Produit : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LibelleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> PuField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> QteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idProduitField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Libelle {
            get {
                return this.LibelleField;
            }
            set {
                if ((object.ReferenceEquals(this.LibelleField, value) != true)) {
                    this.LibelleField = value;
                    this.RaisePropertyChanged("Libelle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Pu {
            get {
                return this.PuField;
            }
            set {
                if ((this.PuField.Equals(value) != true)) {
                    this.PuField = value;
                    this.RaisePropertyChanged("Pu");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Qte {
            get {
                return this.QteField;
            }
            set {
                if ((this.QteField.Equals(value) != true)) {
                    this.QteField = value;
                    this.RaisePropertyChanged("Qte");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int idProduit {
            get {
                return this.idProduitField;
            }
            set {
                if ((this.idProduitField.Equals(value) != true)) {
                    this.idProduitField = value;
                    this.RaisePropertyChanged("idProduit");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WcfService.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        AppsGestionStock.WcfService.CompositeType GetDataUsingDataContract(AppsGestionStock.WcfService.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        System.Threading.Tasks.Task<AppsGestionStock.WcfService.CompositeType> GetDataUsingDataContractAsync(AppsGestionStock.WcfService.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AjouterProduit", ReplyAction="http://tempuri.org/IService1/AjouterProduitResponse")]
        bool AjouterProduit(AppsGestionStock.WcfService.Produit p);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AjouterProduit", ReplyAction="http://tempuri.org/IService1/AjouterProduitResponse")]
        System.Threading.Tasks.Task<bool> AjouterProduitAsync(AppsGestionStock.WcfService.Produit p);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getProduits", ReplyAction="http://tempuri.org/IService1/getProduitsResponse")]
        AppsGestionStock.WcfService.Produit[] getProduits();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getProduits", ReplyAction="http://tempuri.org/IService1/getProduitsResponse")]
        System.Threading.Tasks.Task<AppsGestionStock.WcfService.Produit[]> getProduitsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SupprimerProduit", ReplyAction="http://tempuri.org/IService1/SupprimerProduitResponse")]
        bool SupprimerProduit(System.Nullable<int> id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SupprimerProduit", ReplyAction="http://tempuri.org/IService1/SupprimerProduitResponse")]
        System.Threading.Tasks.Task<bool> SupprimerProduitAsync(System.Nullable<int> id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ModifierProduit", ReplyAction="http://tempuri.org/IService1/ModifierProduitResponse")]
        bool ModifierProduit(AppsGestionStock.WcfService.Produit p);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ModifierProduit", ReplyAction="http://tempuri.org/IService1/ModifierProduitResponse")]
        System.Threading.Tasks.Task<bool> ModifierProduitAsync(AppsGestionStock.WcfService.Produit p);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getProduit", ReplyAction="http://tempuri.org/IService1/getProduitResponse")]
        AppsGestionStock.WcfService.Produit getProduit(System.Nullable<int> id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getProduit", ReplyAction="http://tempuri.org/IService1/getProduitResponse")]
        System.Threading.Tasks.Task<AppsGestionStock.WcfService.Produit> getProduitAsync(System.Nullable<int> id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RechercherProduit", ReplyAction="http://tempuri.org/IService1/RechercherProduitResponse")]
        AppsGestionStock.WcfService.Produit[] RechercherProduit(string Libelle, string Description);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RechercherProduit", ReplyAction="http://tempuri.org/IService1/RechercherProduitResponse")]
        System.Threading.Tasks.Task<AppsGestionStock.WcfService.Produit[]> RechercherProduitAsync(string Libelle, string Description);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : AppsGestionStock.WcfService.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<AppsGestionStock.WcfService.IService1>, AppsGestionStock.WcfService.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public AppsGestionStock.WcfService.CompositeType GetDataUsingDataContract(AppsGestionStock.WcfService.CompositeType composite) {
            return base.Channel.GetDataUsingDataContract(composite);
        }
        
        public System.Threading.Tasks.Task<AppsGestionStock.WcfService.CompositeType> GetDataUsingDataContractAsync(AppsGestionStock.WcfService.CompositeType composite) {
            return base.Channel.GetDataUsingDataContractAsync(composite);
        }
        
        public bool AjouterProduit(AppsGestionStock.WcfService.Produit p) {
            return base.Channel.AjouterProduit(p);
        }
        
        public System.Threading.Tasks.Task<bool> AjouterProduitAsync(AppsGestionStock.WcfService.Produit p) {
            return base.Channel.AjouterProduitAsync(p);
        }
        
        public AppsGestionStock.WcfService.Produit[] getProduits() {
            return base.Channel.getProduits();
        }
        
        public System.Threading.Tasks.Task<AppsGestionStock.WcfService.Produit[]> getProduitsAsync() {
            return base.Channel.getProduitsAsync();
        }
        
        public bool SupprimerProduit(System.Nullable<int> id) {
            return base.Channel.SupprimerProduit(id);
        }
        
        public System.Threading.Tasks.Task<bool> SupprimerProduitAsync(System.Nullable<int> id) {
            return base.Channel.SupprimerProduitAsync(id);
        }
        
        public bool ModifierProduit(AppsGestionStock.WcfService.Produit p) {
            return base.Channel.ModifierProduit(p);
        }
        
        public System.Threading.Tasks.Task<bool> ModifierProduitAsync(AppsGestionStock.WcfService.Produit p) {
            return base.Channel.ModifierProduitAsync(p);
        }
        
        public AppsGestionStock.WcfService.Produit getProduit(System.Nullable<int> id) {
            return base.Channel.getProduit(id);
        }
        
        public System.Threading.Tasks.Task<AppsGestionStock.WcfService.Produit> getProduitAsync(System.Nullable<int> id) {
            return base.Channel.getProduitAsync(id);
        }
        
        public AppsGestionStock.WcfService.Produit[] RechercherProduit(string Libelle, string Description) {
            return base.Channel.RechercherProduit(Libelle, Description);
        }
        
        public System.Threading.Tasks.Task<AppsGestionStock.WcfService.Produit[]> RechercherProduitAsync(string Libelle, string Description) {
            return base.Channel.RechercherProduitAsync(Libelle, Description);
        }
    }
}
